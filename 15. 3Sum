class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> a1=new LinkedList<>();
        Arrays.sort(nums);
        int n=nums.length;
        for(int i=0;i<n-2;i++){
            int low=i+1;
            int high=n-1;
            if(i==0 || (i>0 && nums[i]!=nums[i-1])){
                int sum=0-nums[i];
                while(low<high){
                if(sum==nums[low]+nums[high]){
                    a1.add(Arrays.asList(nums[i],nums[low],nums[high]));
                    while(low<high && nums[low]==nums[low+1]){
                        low++;
                    }
                    while(low<high && nums[high]==nums[high-1]){
                        high--;
                    }
                    low++;
                    high--;
                }
                else if(sum>nums[low]+nums[high]){
                    low++;
                }
                else{
                    high--;
                }
                }
            }
        }
        return a1;
    }
}
